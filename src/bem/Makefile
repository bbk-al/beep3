# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/bem/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/beep
pkgincludedir = $(includedir)/beep
pkglibdir = $(libdir)/beep
pkglibexecdir = $(libexecdir)/beep
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/common.am

# this adds OPENCL #define if we have detected OPENCL
am__append_1 = -DOPENCL
#am__append_2 = libbem_charmc.la
subdir = src/bem
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_check_cl.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbem_la_DEPENDENCIES = ../fmm/libfmm.la \
	../external/tinyxml/libtinyxml.la \
	../opencl/libopencl_handler.la
am_libbem_la_OBJECTS = bem_kernels.lo config_file.lo mesh.lo \
	meshing.lo mesh_instance.lo mesh_tarball.lo node_patch.lo \
	spharm.lo triangle.lo vertex.lo opencl_bem.lo
libbem_la_OBJECTS = $(am_libbem_la_OBJECTS)
libbem_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libbem_la_LDFLAGS) $(LDFLAGS) -o $@
libbem_charmc_la_DEPENDENCIES = ../fmm/libfmm.la \
	../external/tinyxml/libtinyxml.la
am_libbem_charmc_la_OBJECTS = libbem_charmc_la-bem_kernels.lo \
	libbem_charmc_la-config_file.lo libbem_charmc_la-mesh.lo \
	libbem_charmc_la-meshing.lo libbem_charmc_la-mesh_instance.lo \
	libbem_charmc_la-mesh_tarball.lo \
	libbem_charmc_la-node_patch.lo libbem_charmc_la-spharm.lo \
	libbem_charmc_la-triangle.lo libbem_charmc_la-vertex.lo \
	libbem_charmc_la-opencl_bem.lo
libbem_charmc_la_OBJECTS = $(am_libbem_charmc_la_OBJECTS)
#am_libbem_charmc_la_rpath =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libbem_la_SOURCES) $(libbem_charmc_la_SOURCES)
DIST_SOURCES = $(libbem_la_SOURCES) $(libbem_charmc_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run aclocal-1.11
AMTAR = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run autoconf
AUTOHEADER = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run autoheader
AUTOMAKE = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CL_CFLAGS = -pthread
CL_LIBS = -lOpenCL  -lm
CPP = gcc -E
CPPFLAGS = -I/usr/local/cuda-5.0/include -I/d/mw6/u/la002/pjt/build/include -I/d/mw6/u/la002/pjt/build/include/python2.7
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H $(am__append_1)
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/d/mw6/u/la002/pjt/build/lib
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = beep
PACKAGE_BUGREPORT = d.fallaize@ucl.ac.uk
PACKAGE_NAME = beep
PACKAGE_STRING = beep 0.2
PACKAGE_TARNAME = beep
PACKAGE_VERSION = 0.2
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.2
XMKMF = 
abs_builddir = /d/mw6/u/la002/pjt/src/beep-0.2/src/bem
abs_srcdir = /d/mw6/u/la002/pjt/src/beep-0.2/src/bem
abs_top_builddir = /d/mw6/u/la002/pjt/src/beep-0.2
abs_top_srcdir = /d/mw6/u/la002/pjt/src/beep-0.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /d/mw6/u/la002/pjt/src/beep-0.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /d/mw6/u/la002/pjt/build
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LTLIBRARIES = libbem.la $(am__append_2)
libbem_charmc_la_SOURCES = bem_kernels.cpp \
		config_file.cpp \
		mesh.cpp \
		meshing.cpp \
		mesh_instance.cpp \
		mesh_tarball.cpp \
		node_patch.cpp \
		spharm.cpp \
		triangle.cpp \
		vertex.cpp \
		gts_utils.h \
		off_utils.h \
		bem_kernels.h \
		bezier.h \
		png1.h \
		config_file.h \
		constants.h \
		edge.h \
		local_integrations.h \
		mesh.h \
		meshing.h \
		mesh_instance.h \
		mesh_tarball.h \
		node_patch.h \
		quad_point.h \
		spharm.h \
		triangle.h \
		vertex.h \
		opencl_bem.h \
		opencl_bem.cpp \
		opencl_bem_structs.h \
		opencl_bem_kernels.cl.h \
		opendx_utils.h

libbem_charmc_la_CPPFLAGS = -D__CHARMC__  
libbem_charmc_la_LIBADD = ../fmm/libfmm.la ../external/tinyxml/libtinyxml.la -lgsl -lgslcblas -lboost_filesystem -larchive -lboost_thread -lboost_system
libbem_la_SOURCES = bem_kernels.cpp \
		config_file.cpp \
		mesh.cpp \
		meshing.cpp \
		mesh_instance.cpp \
		mesh_tarball.cpp \
		node_patch.cpp \
		spharm.cpp \
		triangle.cpp \
		vertex.cpp \
		gts_utils.h \
		off_utils.h \
		bem_kernels.h \
		bezier.h \
		png1.h \
		config_file.h \
		constants.h \
		edge.h \
		local_integrations.h \
		mesh.h \
		meshing.h \
		mesh_instance.h \
		mesh_tarball.h \
		node_patch.h \
		quad_point.h \
		spharm.h \
		triangle.h \
		vertex.h \
		opencl_bem.h \
		opencl_bem.cpp \
		opencl_bem_structs.h \
		opencl_bem_kernels.cl.h \
		opendx_utils.h

libbem_la_LIBADD = ../fmm/libfmm.la ../external/tinyxml/libtinyxml.la ../opencl/libopencl_handler.la 
libbem_la_LDFLAGS = -lgsl -lgslcblas -lboost_filesystem -larchive -lboost_thread -lboost_system 
EXTRA_DIST = opencl_bem_kernels.cl
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/bem/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/bem/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbem.la: $(libbem_la_OBJECTS) $(libbem_la_DEPENDENCIES) 
	$(libbem_la_LINK)  $(libbem_la_OBJECTS) $(libbem_la_LIBADD) $(LIBS)
libbem_charmc.la: $(libbem_charmc_la_OBJECTS) $(libbem_charmc_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libbem_charmc_la_rpath) $(libbem_charmc_la_OBJECTS) $(libbem_charmc_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bem_kernels.Plo
include ./$(DEPDIR)/config_file.Plo
include ./$(DEPDIR)/libbem_charmc_la-bem_kernels.Plo
include ./$(DEPDIR)/libbem_charmc_la-config_file.Plo
include ./$(DEPDIR)/libbem_charmc_la-mesh.Plo
include ./$(DEPDIR)/libbem_charmc_la-mesh_instance.Plo
include ./$(DEPDIR)/libbem_charmc_la-mesh_tarball.Plo
include ./$(DEPDIR)/libbem_charmc_la-meshing.Plo
include ./$(DEPDIR)/libbem_charmc_la-node_patch.Plo
include ./$(DEPDIR)/libbem_charmc_la-opencl_bem.Plo
include ./$(DEPDIR)/libbem_charmc_la-spharm.Plo
include ./$(DEPDIR)/libbem_charmc_la-triangle.Plo
include ./$(DEPDIR)/libbem_charmc_la-vertex.Plo
include ./$(DEPDIR)/mesh.Plo
include ./$(DEPDIR)/mesh_instance.Plo
include ./$(DEPDIR)/mesh_tarball.Plo
include ./$(DEPDIR)/meshing.Plo
include ./$(DEPDIR)/node_patch.Plo
include ./$(DEPDIR)/opencl_bem.Plo
include ./$(DEPDIR)/spharm.Plo
include ./$(DEPDIR)/triangle.Plo
include ./$(DEPDIR)/vertex.Plo

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libbem_charmc_la-bem_kernels.lo: bem_kernels.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-bem_kernels.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-bem_kernels.Tpo -c -o libbem_charmc_la-bem_kernels.lo `test -f 'bem_kernels.cpp' || echo '$(srcdir)/'`bem_kernels.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-bem_kernels.Tpo $(DEPDIR)/libbem_charmc_la-bem_kernels.Plo
#	source='bem_kernels.cpp' object='libbem_charmc_la-bem_kernels.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-bem_kernels.lo `test -f 'bem_kernels.cpp' || echo '$(srcdir)/'`bem_kernels.cpp

libbem_charmc_la-config_file.lo: config_file.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-config_file.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-config_file.Tpo -c -o libbem_charmc_la-config_file.lo `test -f 'config_file.cpp' || echo '$(srcdir)/'`config_file.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-config_file.Tpo $(DEPDIR)/libbem_charmc_la-config_file.Plo
#	source='config_file.cpp' object='libbem_charmc_la-config_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-config_file.lo `test -f 'config_file.cpp' || echo '$(srcdir)/'`config_file.cpp

libbem_charmc_la-mesh.lo: mesh.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-mesh.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-mesh.Tpo -c -o libbem_charmc_la-mesh.lo `test -f 'mesh.cpp' || echo '$(srcdir)/'`mesh.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-mesh.Tpo $(DEPDIR)/libbem_charmc_la-mesh.Plo
#	source='mesh.cpp' object='libbem_charmc_la-mesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-mesh.lo `test -f 'mesh.cpp' || echo '$(srcdir)/'`mesh.cpp

libbem_charmc_la-meshing.lo: meshing.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-meshing.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-meshing.Tpo -c -o libbem_charmc_la-meshing.lo `test -f 'meshing.cpp' || echo '$(srcdir)/'`meshing.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-meshing.Tpo $(DEPDIR)/libbem_charmc_la-meshing.Plo
#	source='meshing.cpp' object='libbem_charmc_la-meshing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-meshing.lo `test -f 'meshing.cpp' || echo '$(srcdir)/'`meshing.cpp

libbem_charmc_la-mesh_instance.lo: mesh_instance.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-mesh_instance.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-mesh_instance.Tpo -c -o libbem_charmc_la-mesh_instance.lo `test -f 'mesh_instance.cpp' || echo '$(srcdir)/'`mesh_instance.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-mesh_instance.Tpo $(DEPDIR)/libbem_charmc_la-mesh_instance.Plo
#	source='mesh_instance.cpp' object='libbem_charmc_la-mesh_instance.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-mesh_instance.lo `test -f 'mesh_instance.cpp' || echo '$(srcdir)/'`mesh_instance.cpp

libbem_charmc_la-mesh_tarball.lo: mesh_tarball.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-mesh_tarball.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-mesh_tarball.Tpo -c -o libbem_charmc_la-mesh_tarball.lo `test -f 'mesh_tarball.cpp' || echo '$(srcdir)/'`mesh_tarball.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-mesh_tarball.Tpo $(DEPDIR)/libbem_charmc_la-mesh_tarball.Plo
#	source='mesh_tarball.cpp' object='libbem_charmc_la-mesh_tarball.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-mesh_tarball.lo `test -f 'mesh_tarball.cpp' || echo '$(srcdir)/'`mesh_tarball.cpp

libbem_charmc_la-node_patch.lo: node_patch.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-node_patch.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-node_patch.Tpo -c -o libbem_charmc_la-node_patch.lo `test -f 'node_patch.cpp' || echo '$(srcdir)/'`node_patch.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-node_patch.Tpo $(DEPDIR)/libbem_charmc_la-node_patch.Plo
#	source='node_patch.cpp' object='libbem_charmc_la-node_patch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-node_patch.lo `test -f 'node_patch.cpp' || echo '$(srcdir)/'`node_patch.cpp

libbem_charmc_la-spharm.lo: spharm.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-spharm.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-spharm.Tpo -c -o libbem_charmc_la-spharm.lo `test -f 'spharm.cpp' || echo '$(srcdir)/'`spharm.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-spharm.Tpo $(DEPDIR)/libbem_charmc_la-spharm.Plo
#	source='spharm.cpp' object='libbem_charmc_la-spharm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-spharm.lo `test -f 'spharm.cpp' || echo '$(srcdir)/'`spharm.cpp

libbem_charmc_la-triangle.lo: triangle.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-triangle.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-triangle.Tpo -c -o libbem_charmc_la-triangle.lo `test -f 'triangle.cpp' || echo '$(srcdir)/'`triangle.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-triangle.Tpo $(DEPDIR)/libbem_charmc_la-triangle.Plo
#	source='triangle.cpp' object='libbem_charmc_la-triangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-triangle.lo `test -f 'triangle.cpp' || echo '$(srcdir)/'`triangle.cpp

libbem_charmc_la-vertex.lo: vertex.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-vertex.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-vertex.Tpo -c -o libbem_charmc_la-vertex.lo `test -f 'vertex.cpp' || echo '$(srcdir)/'`vertex.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-vertex.Tpo $(DEPDIR)/libbem_charmc_la-vertex.Plo
#	source='vertex.cpp' object='libbem_charmc_la-vertex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-vertex.lo `test -f 'vertex.cpp' || echo '$(srcdir)/'`vertex.cpp

libbem_charmc_la-opencl_bem.lo: opencl_bem.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbem_charmc_la-opencl_bem.lo -MD -MP -MF $(DEPDIR)/libbem_charmc_la-opencl_bem.Tpo -c -o libbem_charmc_la-opencl_bem.lo `test -f 'opencl_bem.cpp' || echo '$(srcdir)/'`opencl_bem.cpp
	$(am__mv) $(DEPDIR)/libbem_charmc_la-opencl_bem.Tpo $(DEPDIR)/libbem_charmc_la-opencl_bem.Plo
#	source='opencl_bem.cpp' object='libbem_charmc_la-opencl_bem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbem_charmc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbem_charmc_la-opencl_bem.lo `test -f 'opencl_bem.cpp' || echo '$(srcdir)/'`opencl_bem.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

#AM_CXXFLAGS = -std=c++1z

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
